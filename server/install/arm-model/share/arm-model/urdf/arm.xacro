<?xml version="1.0" ?>

<robot name="mrm" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- BGN - Include -->
  <xacro:include filename="/server_ws/src/arm-model/urdf/robot_parameters.xacro" />
  <xacro:include filename="/server_ws/src/arm-model/urdf/links_joints.xacro" />
  <!-- END - Include -->
  
  <!-- BGN - Robot description -->
  <xacro:m_link_box name="${link_00_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 0"
              mass="1024"
              ixx="170.667" ixy="0" ixz="0"
              iyy="170.667" iyz="0"
              izz="170.667"
              size="1 1 1" />
              
  <xacro:m_joint name="${link_00_name}__${link_01_name}" type="revolute"
           axis_xyz="0 0 1"
           origin_rpy="0 0 0" origin_xyz="0 0 0.5"
           parent="base_link" child="link_01"
           limit_e="1000" limit_l="-3.14" limit_u="3.14" limit_v="0.5" />
           
  <!-- <m_link_mesh name="${link_01_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 -0.1"
              mass="157.633"
              ixx="13.235" ixy="0" ixz="0"
              iyy="13.235" iyz="0"
              izz="9.655"
              meshfile="package://mrm_description/meshes/Link1-v2.stl"
              meshscale="0.001 0.001 0.001" /> -->
  
  <xacro:m_link_cylinder name="${link_01_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 0.2"
              mass="157.633"
              ixx="13.235" ixy="0" ixz="0"
              iyy="13.235" iyz="0"
              izz="9.655"
              radius="0.35" length="0.4" />
              
  <xacro:m_joint name="${link_01_name}__${link_02_name}" type="revolute"
           axis_xyz="0 1 0"
           origin_rpy="0 0 0" origin_xyz="0 0 0.4"
           parent="link_01" child="link_02"
           limit_e="1000" limit_l="0" limit_u="0.5" limit_v="0.5" />
           
  <xacro:m_link_cylinder name="${link_02_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 0.4"
              mass="57.906"
              ixx="12.679" ixy="0" ixz="0"
              iyy="12.679" iyz="0"
              izz="0.651"
              radius="0.15" length="0.8" />
              
  <xacro:m_joint name="${link_02_name}__${link_03_name}" type="revolute"
           axis_xyz="0 1 0"
           origin_rpy="0 0 0" origin_xyz="0 0 0.8"
           parent="link_02" child="link_03"
           limit_e="1000" limit_l="0" limit_u="0.75" limit_v="0.5" />
           
  <xacro:m_link_cylinder name="${link_03_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 0.4"
              mass="57.906"
              ixx="12.679" ixy="0" ixz="0"
              iyy="12.679" iyz="0"
              izz="0.651"
              radius="0.15" length="0.8" />
              
  <xacro:m_joint name="${link_03_name}__${link_04_name}" type="revolute"
           axis_xyz="0 1 0"
           origin_rpy="0 0 0" origin_xyz="0 0 0.8"
           parent="link_03" child="link_04"
           limit_e="1000" limit_l="0" limit_u="0.75" limit_v="0.5" />
           
  <xacro:m_link_cylinder name="${link_04_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 0.4"
              mass="57.906"
              ixx="12.679" ixy="0" ixz="0"
              iyy="12.679" iyz="0"
              izz="0.651"
              radius="0.15" length="0.8" />
              
  <xacro:m_joint name="${link_04_name}__${link_05_name}" type="revolute"
           axis_xyz="0 0 1"
           origin_rpy="0 0 0" origin_xyz="0 0 0.8"
           parent="link_04" child="link_05"
           limit_e="1000" limit_l="-3.14" limit_u="3.14" limit_v="0.5" />
           
  <xacro:m_link_cylinder name="${link_05_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 0.125"
              mass="18.056"
              ixx="0.479" ixy="0" ixz="0"
              iyy="0.479" iyz="0"
              izz="0.204"
              radius="0.15" length="0.25" />
  
              
  <!-- END - Robot description Total weight = 1373.401  ==> 13473.065N-->
  
    <!-- This plugin will publish the joint_states for the selected joints 
            (which robot_state_publisher can then use to broadcast the approprate tf). -->
 
    <gazebo>
      <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>20</update_rate>
        <joint_name>${link_00_name}__${link_01_name}</joint_name>
        <joint_name>${link_01_name}__${link_02_name}</joint_name>
        <joint_name>${link_03_name}__${link_04_name}</joint_name>
        <joint_name>${link_04_name}__${link_05_name}</joint_name>
      </plugin>
    </gazebo>

    <!-- This plugin will read a JointTrajectory message from the /set_joint_trajectory topic 
            and move the machine accordingly. It's a bit clunky but it works. -->
    <!-- You'll probably want to add damping to the joints to stop them it flopping around. 
            e.g. <dynamics damping="10.0" friction="10.0"/> -->
    <!-- Here's an example message to publish to test it:
            ros2 topic pub -1 /set_joint_trajectory trajectory_msgs/msg/JointTrajectory  '{header: {frame_id: world}, joint_names: [slider_joint, arm_joint], points: [  {positions: {0.8,0.6}} ]}' 
            ros2 topic pub -1 /set_joint_trajectory trajectory_msgs/msg/JointTrajectory  '{header: {frame_id: world}, joint_names: [base_link__link_01], points: [  {positions: {1.8}} ]}'
            -->
    <gazebo>
      <plugin name="gazebo_ros_joint_pose_trajectory"
        filename="libgazebo_ros_joint_pose_trajectory.so">
        <update_rate>2</update_rate>
      </plugin>
    </gazebo>

    <!-- Ros Gazebo force Plugin -->
    <!-- http://wiki.ros.org/pr2_gazebo_plugins/Tutorials/Attaching%20a%20GazeboRosForce%20pugin%20to%20Objects%20in%20Simulation
    https://docs.ros.org/en/ros2_packages/rolling/api/gazebo_plugins/generated/classgazebo__plugins_1_1GazeboRosForce.html
    ros2 topic pub /force geometry_msgs/Wrench  '{force:  {x: 0.0, y: 0.0, z: 0.0}, torque: {x: 0.0,y: 0.0,z: 0.6}}'
    ros2 topic pub -1 /gazebo_ros_force  geometry_msgs/Wrench  '{force:  {x: 0.0, y: 0.0, z: .0}, torque: {x: 0.0,y: 0.0,z: -5000.6}}'
    ros2 topic pub -1 /force/link_01  geometry_msgs/Wrench  '{force:  {x: 0.0, y: 0.0, z: 13473.06}, torque: {x: 0.0,y: 0.0,z: 0.0}}'
     -->
    

    <gazebo>
      <plugin name="gazebo_ros_force" filename="libgazebo_ros_force.so">
        <!-- <alwaysOn>true</alwaysOn>
        <update>100</update>
        <updateRate>100.0</updateRate> -->

        <ros>
          <!-- Add a namespace -->
          <namespace>/force</namespace>
          <!-- Remap the default topic -->
          <remapping>gazebo_ros_force:=${link_01_name}</remapping>
        </ros>

        <force_frame>link</force_frame>
        <link_name>${link_01_name}</link_name>
      </plugin>
    </gazebo>


</robot>

