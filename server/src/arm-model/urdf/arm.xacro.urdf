<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from arm.xacro                      | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mrm">
  <!-- END - Include -->
  <link name="base_link">
    <inertial>
      <mass value="1024"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="170.667" ixy="0" ixz="0" iyy="170.667" iyz="0" izz="170.667"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1 1 1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1 1 1"/>
      </geometry>
    </visual>
  </link>
  <joint name="base_link__link_01" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-3.14" upper="3.14" velocity="0.5"/>
    <origin rpy="0 0 0" xyz="0 0 0.5"/>
    <parent link="base_link"/>
    <child link="link_01"/>
    <dynamics damping="10.0" friction="10.0"/>
  </joint>
  <!-- <transmission name="trans_${name}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission> -->
  <!-- <m_link_mesh name="${link_01_name}"
              origin_rpy="0 0 0" origin_xyz="0 0 -0.1"
              mass="157.633"
              ixx="13.235" ixy="0" ixz="0"
              iyy="13.235" iyz="0"
              izz="9.655"
              meshfile="package://mrm_description/meshes/Link1-v2.stl"
              meshscale="0.001 0.001 0.001" /> -->
  <link name="link_01">
    <inertial>
      <mass value="157.633"/>
      <origin rpy="0 0 0" xyz="0 0 0.2"/>
      <inertia ixx="13.235" ixy="0" ixz="0" iyy="13.235" iyz="0" izz="9.655"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.2"/>
      <geometry>
        <cylinder length="0.4" radius="0.35"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.2"/>
      <geometry>
        <cylinder length="0.4" radius="0.35"/>
      </geometry>
    </visual>
  </link>
  <joint name="link_01__link_02" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="0" upper="0.5" velocity="0.5"/>
    <origin rpy="0 0 0" xyz="0 0 0.4"/>
    <parent link="link_01"/>
    <child link="link_02"/>
    <dynamics damping="10.0" friction="10.0"/>
  </joint>
  <!-- <transmission name="trans_${name}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission> -->
  <link name="link_02">
    <inertial>
      <mass value="57.906"/>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <inertia ixx="12.679" ixy="0" ixz="0" iyy="12.679" iyz="0" izz="0.651"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <geometry>
        <cylinder length="0.8" radius="0.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <geometry>
        <cylinder length="0.8" radius="0.15"/>
      </geometry>
    </visual>
  </link>
  <joint name="link_02__link_03" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="0" upper="0.75" velocity="0.5"/>
    <origin rpy="0 0 0" xyz="0 0 0.8"/>
    <parent link="link_02"/>
    <child link="link_03"/>
    <dynamics damping="10.0" friction="10.0"/>
  </joint>
  <!-- <transmission name="trans_${name}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission> -->
  <link name="link_03">
    <inertial>
      <mass value="57.906"/>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <inertia ixx="12.679" ixy="0" ixz="0" iyy="12.679" iyz="0" izz="0.651"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <geometry>
        <cylinder length="0.8" radius="0.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <geometry>
        <cylinder length="0.8" radius="0.15"/>
      </geometry>
    </visual>
  </link>
  <joint name="link_03__link_04" type="revolute">
    <axis xyz="0 1 0"/>
    <limit effort="1000" lower="0" upper="0.75" velocity="0.5"/>
    <origin rpy="0 0 0" xyz="0 0 0.8"/>
    <parent link="link_03"/>
    <child link="link_04"/>
    <dynamics damping="10.0" friction="10.0"/>
  </joint>
  <!-- <transmission name="trans_${name}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission> -->
  <link name="link_04">
    <inertial>
      <mass value="57.906"/>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <inertia ixx="12.679" ixy="0" ixz="0" iyy="12.679" iyz="0" izz="0.651"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <geometry>
        <cylinder length="0.8" radius="0.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.4"/>
      <geometry>
        <cylinder length="0.8" radius="0.15"/>
      </geometry>
    </visual>
  </link>
  <joint name="link_04__link_05" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000" lower="-3.14" upper="3.14" velocity="0.5"/>
    <origin rpy="0 0 0" xyz="0 0 0.8"/>
    <parent link="link_04"/>
    <child link="link_05"/>
    <dynamics damping="10.0" friction="10.0"/>
  </joint>
  <!-- <transmission name="trans_${name}">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_${name}">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission> -->
  <link name="link_05">
    <inertial>
      <mass value="18.056"/>
      <origin rpy="0 0 0" xyz="0 0 0.125"/>
      <inertia ixx="0.479" ixy="0" ixz="0" iyy="0.479" iyz="0" izz="0.204"/>
    </inertial>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.125"/>
      <geometry>
        <cylinder length="0.25" radius="0.15"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.125"/>
      <geometry>
        <cylinder length="0.25" radius="0.15"/>
      </geometry>
    </visual>
  </link>
  <!-- END - Robot description -->
  <!-- This plugin will publish the joint_states for the selected joints 
            (which robot_state_publisher can then use to broadcast the approprate tf). -->
  <gazebo>
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="gazebo_ros_joint_state_publisher">
      <update_rate>20</update_rate>
      <joint_name>&quot;base_link&quot;</joint_name>
      <joint_name>link_01</joint_name>
      <joint_name>link_02</joint_name>
      <joint_name>link_03</joint_name>
      <joint_name>link_05</joint_name>
      <joint_name>link_06</joint_name>
    </plugin>
  </gazebo>
  <!-- This plugin will read a JointTrajectory message from the /set_joint_trajectory topic 
            and move the machine accordingly. It's a bit clunky but it works. -->
  <!-- You'll probably want to add damping to the joints to stop them it flopping around. 
            e.g. <dynamics damping="10.0" friction="10.0"/> -->
  <!-- Here's an example message to publish to test it:
            ros2 topic pub -1 /set_joint_trajectory trajectory_msgs/msg/JointTrajectory  '{header: {frame_id: world}, joint_names: [slider_joint, arm_joint], points: [  {positions: {0.8,0.6}} ]}' -->
  <gazebo>
    <plugin filename="libgazebo_ros_joint_pose_trajectory.so" name="gazebo_ros_joint_pose_trajectory">
      <update_rate>2</update_rate>
    </plugin>
  </gazebo>
  <!-- Ros Gazebo force Plugin -->
  <!-- http://wiki.ros.org/pr2_gazebo_plugins/Tutorials/Attaching%20a%20GazeboRosForce%20pugin%20to%20Objects%20in%20Simulation
    ros2 pub /force geometry_msgs/Wrench  '{force:  {x: 0.0, y: 0.0, z: 0.0}, torque: {x: 0.0,y: 0.0,z: 0.6}}' -->
  <gazebo>
    <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
      <alwaysOn>true</alwaysOn>
      <update>100</update>
      <updateRate>100.0</updateRate>
      <bodyName>link_01</bodyName>
      <topicName>force</topicName>
    </plugin>
  </gazebo>
  <!-- 
   <gazebo>
    <controller:gazebo_ros_force name="gazebo_ros_force" plugin="libgazebo_ros_force.so">
      <alwaysOn>true</alwaysOn>
      <update>100</update>
      <updateRate>100.0</updateRate>
      <bodyName>link_01</bodyName>
      <topicName>force</topicName>
    </controller:gazebo_ros_force>
  </gazebo> -->
</robot>
